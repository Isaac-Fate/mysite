---
import BlogPostCard from "@/components/BlogPostCard.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import { z } from "zod";

const maxNumPostsPerPage = 3;

// Get all blog posts
const posts = await getCollection("posts");

// Sort blog posts by creation date in descending order
posts.sort(
  // @ts-ignore
  (post1, post2) =>
    post2.data.createdAt.valueOf() - post1.data.createdAt.valueOf(),
);

// Count the number of pages
const numPages = Math.ceil(posts.length / maxNumPostsPerPage);

export function getStaticPaths() {
  // Generate page numbers
  const pageNums = Array.from({ length: numPages }, (_, i) => i + 1);

  // Each item of the array is a page params object
  const pageParamsArray = pageNums.map((pageNum) => ({
    params: { pageNum },
  }));

  return pageParamsArray;
}

// Get the page number
let { pageNum } = Astro.params;

if (pageNum === undefined) {
  pageNum = 1;
}

// Redict to 404
if (pageNum > numPages) {
  Astro.response.status = 404;
}

// Get the blog posts for the current page
const postsForPage = posts.slice(
  (pageNum - 1) * maxNumPostsPerPage,
  pageNum * maxNumPostsPerPage,
);

console.log(`page number: {${pageNum}}`);
---

<MainLayout className="flex flex-col" title="Blog">
  <!-- Title -->
  <div class="text-2xl font-semibold">
    <span class="text-code-variable">blog_posts</span>
    <span class="text-code-plain">=</span>
    <span class="text-code-bracket-1">{"["}</span>
  </div>

  <!-- Blog post cards -->
  {
    // @ts-ignore
    postsForPage.map((post) => (
      <BlogPostCard
        slug={post.slug}
        title={post.data.title}
        description={post.data.description}
        createdAt={post.data.createdAt}
        cover={post.data.cover}
      />
    ))
  }

  <!-- End of blog post cards -->
  <div class="text-2xl font-semibold">
    <span class="text-code-bracket-1">{"]"}</span>
  </div>
</MainLayout>

---
import { cn } from "@/lib/utils";

interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<div
  id="search-button"
  class={cn(
    "relative bg-background flex flex-row rounded-md  px-[2rem] py-2 hover:cursor-pointer md:hover:ring-1  group ease-in-out transition duration-300 hover:ring-code-class ",
    className,
  )}
>
  {/* Search icon */}
  <div
    class="flex -translate-x-[1rem] flex-col justify-center p-0 text-code-class"
  >
    <span class="icon-[my--search]"></span>
  </div>

  {/* Text */}
  <p class="md:group-hover:text-code-function">Search</p>

  {/* Slash key icon */}
  <div
    id="search-button-hotkey-icon"
    class="hidden h-full translate-x-[1rem] flex-col justify-center text-code-class duration-300 md:flex"
    ,
  >
    <span class="icon-[solar--slash-square-linear]"></span>
  </div>
</div>

<script>
  import { openSearchDialog, isSearchDialogOpen } from "@/utils";

  // Hotkey
  const hotkey = "/";

  function search() {
    // Open the search dialog
    openSearchDialog();

    // Get the search inputs
    const searchInputs = document.getElementsByClassName(
      "pagefind-ui__search-input",
    ) as HTMLCollectionOf<HTMLInputElement>;

    for (const searchInput of searchInputs) {
      // Gain focus
      searchInput.focus();
    }

    // Get the one and only search input
    const searchInput = searchInputs[0] as HTMLInputElement;

    // Gain focus
    searchInput.focus();
  }

  document.addEventListener("astro:page-load", async () => {
    // Get the search button
    const searchButton = document.getElementById("search-button");

    if (!searchButton) {
      return;
    }

    // Handle click
    searchButton.addEventListener("click", () => {
      search();
    });
  });

  document.addEventListener("keydown", (event) => {
    if (event.key === hotkey && !isSearchDialogOpen()) {
      event.preventDefault();

      // Get the search button hotkey icon
      const searchButtonHotkeyIcon = document.getElementById(
        "search-button-hotkey-icon",
      );

      // Enlarge the icon
      searchButtonHotkeyIcon?.classList.add("scale-150");
    }
  });

  document.addEventListener("keyup", (event) => {
    if (event.key === hotkey && !isSearchDialogOpen()) {
      event.preventDefault();

      // Get the search button hotkey icon
      const searchButtonHotkeyIcon = document.getElementById(
        "search-button-hotkey-icon",
      );

      // Reset the icon to its original size
      searchButtonHotkeyIcon?.classList.remove("scale-150");

      // Search the site
      search();
    }
  });
</script>

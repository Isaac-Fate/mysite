---
import { Button } from "./ui/button";
import Search from "./Search.astro";
---

<div
  id="search-dialog"
  class="fixed bottom-0 left-0 right-0 top-0 z-50 hidden bg-background md:bg-overlay md:backdrop-blur"
>
  <!-- For landscape wide screens -->
  <div
    id="search-dialog-modal"
    class="hidden h-screen landscape:md:flex landscape:md:flex-col landscape:md:items-center landscape:md:justify-center"
  >
    <div
      class="flex h-[50vh] max-h-[500px] min-h-[200px] w-2/3 min-w-[20rem] max-w-[500px] flex-col overflow-scroll rounded-md border-2 bg-panel p-8 shadow-md md:w-3/4 md:max-w-[800px]"
    >
      <Search />
    </div>
  </div>

  <!-- For protrait or narrow screens -->
  <div
    class="flex max-h-screen w-full flex-col overflow-auto p-4 landscape:md:hidden"
  >
    <div class="flex w-full flex-col justify-between gap-2">
      <!-- Search -->
      <Search />

      <!-- Cancel button -->
      <div class="fixed bottom-0 right-0 z-50 h-14 p-2">
        <Button
          id="search-dialog-cancel-button"
          className="gap-4 bg-panel text-code-class"
          variant={"outline"}
        >
          <span class="icon-[lets-icons--back]"></span>
          <p>Cancel</p>
        </Button>
      </div>

      <!-- Cancel button -->
      <!-- <div class="flex flex-col justify-start p-2">
        <Button
          id="search-dialog-cancel-button"
          className="sticky top-0 text-code-class"
          variant={"outline"}>Cancel</Button
        >
      </div> -->
    </div>
  </div>
</div>

<script>
  import { getSearchDialog, closeSearchDialog } from "@/utils";

  // Hit Escape key to close the search dialog
  document.addEventListener("keyup", (event) => {
    if (event.key === "Escape") {
      event.preventDefault();

      // Close the search dialog
      closeSearchDialog();
    }
  });

  document.addEventListener("astro:page-load", async () => {
    // Get the search dialog
    const searchDialog = getSearchDialog();

    if (searchDialog) {
      searchDialog.onclick = (event) => {
        // Cast the event target to HTMLElement
        const element = event.target as HTMLElement;

        // Close the search dialog when the modal is clicked
        if (element.id === "search-dialog-modal") {
          closeSearchDialog();
        }
      };
    }

    // Set up cancel button
    const cancelButton = document.getElementById("search-dialog-cancel-button");

    if (cancelButton) {
      cancelButton.onclick = () => {
        // Close the search dialog
        closeSearchDialog();
      };
    }

    // Set up scroll to top button
    const scrollToTopButton = document.getElementById(
      "search-dialog-scroll-to-top-button",
    );

    // if (scrollToTopButton) {
    //   scrollToTopButton.onclick = () => {
    //     // Scroll to top
    //     searchDialog?.scrollTo({
    //       top: 0,
    //       behavior: "smooth",
    //     });
    //   };
    // }
  });
</script>

<style is:global>
  .search-dialog-fade-in {
    animation: fade-in 300ms ease-in-out forwards;
  }

  .search-dialog-fade-out {
    animation: fade-out 300ms ease-in-out forwards;
  }

  @keyframes fade-in {
    0% {
      display: hidden;
      opacity: 0;
    }

    100% {
      display: block;
      opacity: 1;
    }
  }

  @keyframes fade-out {
    0% {
      display: block;
      opacity: 1;
    }

    100% {
      display: hidden;
      opacity: 0;
    }
  }
</style>
